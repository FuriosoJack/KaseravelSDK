<?php


namespace FuriosoJack\Kaseravel\Core\HTTP;
use FuriosoJack\Kaseravel\Core\HTTP\Auth\Auth;

/**
 * Class ClientApi
 * @package FuriosoJack\Kaseravel\Core\HTTP\Request
 * @author Juan Diaz - FuriosoJack <iam@furiosojack.com>
 */
class ClientApi extends \RestClient
{
    const API_BASE_PATH = "/api/v1.0/";
    private $host;



    public function __construct(string $host)
    {
        $this->host = $host;
        parent::__construct($this->getOptionsRestClient());
    }

    /**
     * Obitiene la url basica del host
     * @return string
     */
    private function getUrl()
    {
        return 'https://'. $this->host . self::API_BASE_PATH;
    }


    /**
     * @return array
     */
    private function getOptionsRestClient():array
    {
        return [
           'base_url' => $this->getUrl(),
           'curl_options' => [
                CURLOPT_SSL_VERIFYPEER => false,
                CURLOPT_SSL_VERIFYHOST => false
           ]
        ];

    }

    /**
     * Ejecuta el request y devuelve un response
     * @param $url
     * @param string $method
     * @param array $parameters
     * @param array $headers
     * @return Response
     * @throws \FuriosoJack\LaraException\Exceptions\ExceptionJson
     * @throws \FuriosoJack\LaraException\Exceptions\ExceptionView
     */
    public function execute($url, $method = 'GET', $parameters = [], $headers = []):Response
    {
        if($method == 'GET' or $method == 'POST' or $method == 'PUT' or $method == 'DELETE'){
            $responseRAW =  parent::execute($url, $method, $parameters, $headers); // TODO: Change the autogenerated stub
            return new Response($responseRAW);
        }
        throw new \Exception('Metodo de peticion del api no permitido');
    }



}