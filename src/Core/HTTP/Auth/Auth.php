<?php
namespace FuriosoJack\Kaseravel\Core\HTTP\Auth;
use FuriosoJack\Kaseravel\Core\HTTP\ClientApi;
use FuriosoJack\Kaseravel\Core\HTTP\Response;

/**
 * Class AuthClient
 * @author Juan Diaz - FuriosoJack <iam@furiosojack.com>
 */
class Auth extends ClientApi
{
    private $credentials;
    private $session;
    public function __construct(string $host,string $user, string $password)
    {
        parent::__construct($host);

        $this->credentials = new Credentials($user,$password);

        $this->session = new Session();


    }


    /**
     * Se encarga de ejecutar el request para realizar la autenticacion
     * @return Response
     * @throws \Exception
     * @throws \FuriosoJack\LaraException\Exceptions\ExceptionJson
     * @throws \FuriosoJack\LaraException\Exceptions\ExceptionViewç
     */
    private function executeRequestAuth(): Response
    {

        //Se hace la Autenticacion con el request del padre para que no añada los nuevos headers
        $response = parent::execute('auth','GET',[],['Authorization' => 'Basic '. $this->credentials->getHash()]);
        if($response->existError()){
            throw new \Exception("Credenciales invalidas");
        }
        return $response;
    }


    /**
     * obtiene el token de lasession
     * @return string
     * @throws \Exception
     */
    private function getSessionToken():string
    {
        //Se valida la session
        if(!$this->session->valid()){

            //Se realizar autenticacion
            $response = $this->executeRequestAuth();
            //Se genera la session
            $this->session->generate($response);
        }
        return $this->session->getToken();

    }

    public function execute($url, $method = 'GET', $parameters = [], $headers = []): Response
    {
        $headers = array_merge($headers,[
            'Authorization' => 'Bearer '. $this->getSessionToken()
        ]);
        $reponse = parent::execute($url, $method, $parameters, $headers); // TODO: Change the autogenerated stub;


        return $reponse;
    }

}